//-------------------------------------------------------
//- Modules :: Input
//-------------------------------------------------------

//- Input Field
mixin input-field({ type, placeholder, value })
  input.form-control(
    type= type ? type : 'text'
    placeholder= placeholder ? placeholder : null
    value= value ? value : null
  )&attributes(attributes)

//- Input Field Base has label
mixin group-input-field-base({ label, id, type, placeholder, required, badge, textLabel, iconLabel, size, clearable, spinner, min, max, value, noteText, labelInput})

  .form-group.form-customize&attributes(attributes)
    label(
      for= id ? id : null
      class= (textLabel || iconLabel) ? 'd-flex justify-content-between' : null
    )= label
      if required
        abbr(title="Required" class= "required") *
      if badge
        span.badge.label__badge(
          class= (badge == "Required") ? 'badge--danger' : 'badge--secondary'
        )= badge
      if textLabel
        span.label__text.text-muted= textLabel
      if iconLabel
        span.label__icon.label__icon--after.js-toggle-icon
          i(class= iconLabel)
          span Show

    .input-field(
      class= size ? `input-field--${size}`: null,
      class= type ? `input-field--${type}` : null,
      class= clearable ? 'input-field--clearable' : null
      class= spinner ? 'input-field--spinner' : null
    )
      if clearable
        button.close( type= 'button' aria-label= 'Close' )
          span(aria-hidden= "true")
            i(class= 'fa fa-times-circle')

      if spinner
        .spinner-border( role= "status" )
          span.sr-only Loading...

      +input-field({ type, placeholder, value })(
        id= id ? id : null
        min = min ? min : null
        max = max ? max : null
        value = value ? value : null
        multiple= (type == 'file') ? 'multiple' : null
      )
      if (type == 'file')
        label.input-field__file-label(for= id ? id : null)= labelInput

      if (type == 'number')
        .custom-number
          .custom-number__btn.custom-number__up
            i(class = 'fas fa-plus')
          .custom-number__btn.custom-number__down
            i(class = 'fas fa-minus')

    if noteText
      p.note-text= noteText

//- Input Field State has label
mixin group-input-field-states({ label, id, required, badge, iconAfter, labelInput, type, placeholder, isValid, isInvalid, noticeSuccess, noticeError })

  .form-group.form-customize(
    class= noticeError ? `form-error` : null
  )&attributes(attributes)
    label(
      for= id ? id : null
    )= label
    
    .input-field(
      class= size ? `input-field--${size}`: null,
      class= type ? `input-field--${type}` : null,
      class= isValid ? 'input-field--isValid' : null,
      class= isInvalid ? 'input-field--isInvalid' : null
    )
      +input-field({ type, placeholder, value })(
        id= id ? id : null
        multiple= (type == 'file') ? 'multiple' : null
      )

    if noticeSuccess
      p.success-notice= noticeSuccess

    if noticeError
      p.error-notice
        i.error-notice__icon(class= "fa fa-exclamation-circle fa-fw")
        | #{noticeError}

//- Input Field Readonly
mixin group-input-field-readonly({ label, value })
  .form-group.form-readonly
    label= label
    +input-field({ type, placeholder, value })(
      readonly
    )

//- Input Field disabled
mixin group-input-field-disabled({ label, id, type, placeholder, value, disabled })
  .form-group(
    class= "form-control__disabled"
  )&attributes(attributes)
    label(
      for= id ? id : null
    )= label

    +input-field({ type, placeholder, value })(
      disabled= disabled ? disabled : null
    )

//- Input Field Float label has label
mixin group-input-field-float-label({ label, id, value, placeholder, disabled, isValid, isInvalid, spinner, noticeError})
  .form-group.form-customize&attributes(attributes)
    .input-label(
      class= isValid ? 'input-label--isValid' : null,
      class= isInvalid ? 'input-label--isInvalid' : null
      class= spinner ? 'input-label--spinner' : null
    )
      label(
        for= id ? id : null
      )= label

      if spinner
        .spinner-border( role= "status" )
          span.sr-only Loading...

      +input-field({ type, placeholder, value })(
        id= id ? id : null
        disabled= disabled ? disabled : null
      )

    if noticeError
      p.error-notice
        i.error-notice__icon(class= "fa fa-exclamation-circle fa-fw")
        | #{noticeError}
