//-------------------------------------------------------
//- Modules :: Input
//-------------------------------------------------------

//- Input Field
mixin input-field({ type, placeholder, value })
  input.form-control(
    type= type ? type : 'text'
    placeholder= placeholder ? placeholder : null
    value= value ? value : null
  )&attributes(attributes)

mixin input-field-icon({ type, placeholder, value, iconBefore })
  .form-group.form-customize&attributes(attributes)
    .input-field(class= iconBefore ? `input-field--icon-before`: null)
      +input-field({ type, placeholder, value })(
        id= id ? id : null
      )
      if iconBefore
        span.input-field__icon.input-field__icon--before
          i(class= iconBefore)

//- Input Field Base has label
mixin group-input-field-base({ label, id, required, badges, countText, iconShow, iconBefore, placeholder, type, size, clearable, spinner, min, max, value, iconUp, iconDown, noteText, labelInput})

  .form-group.form-customize&attributes(attributes)
    div(class= (countText || iconShow) ? 'd-flex justify-content-between' : null)
      label.label(
        for= id ? id : null
      )= label
        if required
          abbr(title='Required' class= 'required') *
        if badges
          each val in badges
            span.badge(class= val.type ? `badge--${val.type}` : null)
              | #{val.text}

      if countText
        span.count-text= countText
      if iconShow
        span.icon-show.js-toggle-icon
          i(class= iconShow)
          span Show

    .input-field(
      class= size ? `input-field--${size}`: null,
      class= type ? `input-field--${type}`: null,
      class= (type== 'number') ? 'js-input-number': null,
      class= iconBefore ? `input-field--icon-before`: null,
      class= clearable ? 'input-field--clearable js-input-clearable' : null
      class= spinner ? 'input-field--spinner js-input-spinner' : null
    )
      if clearable
        button.close.show( type= 'button' aria-label= 'Close' )
          span(aria-hidden= "true")
            i(class= clearable )

      if spinner
        .spinner-border.spinner-border-sm( role= "status" )
          span.sr-only Loading...

      if iconBefore
        span.input-field__icon.input-field__icon--before
          i(class= iconBefore)

      +input-field({ type, placeholder, value })(
        id= id ? id : null
        min = min ? min : null
        max = max ? max : null
        multiple= (type == 'file') ? 'multiple' : null
      )
      if (type == 'file')
        label.input-field__file-label(for= id ? id : null)= labelInput

      if (type == 'number')
        .custom-number
          .custom-number__btn.custom-number__up.js-btn-up
            i(class= iconUp)
          .custom-number__btn.custom-number__down.js-btn-down
            i(class= iconDown)

    if noteText
      p.note-text= noteText

//- Input Field State has label
mixin group-input-field-states({ label, id, required, badge, iconAfter, labelInput, type, placeholder, isValid, isInvalid, noticeSuccess, noticeError, iconError })

  .form-group.form-customize(
    class= noticeError ? `form-error` : null
  )&attributes(attributes)
    label(
      for= id ? id : null
    )= label
    
    .input-field(
      class= size ? `input-field--${size}`: null,
      class= type ? `input-field--${type}` : null,
      class= isValid ? 'input-field--isValid' : null,
      class= isInvalid ? 'input-field--isInvalid' : null
    )
      +input-field({ type, placeholder, value })(
        id= id ? id : null
        multiple= (type == 'file') ? 'multiple' : null
      )

    if noticeSuccess
      p.success-notice= noticeSuccess

    if noticeError
      p.error-notice
        i.error-notice__icon(class= iconError)
        | #{noticeError}


//- Input Field Readonly
mixin group-input-field-readonly({ label, type, placeholder, value, flatpickr })
  .form-group.form-customize.form-readonly&attributes(attributes)
    if label
      label= label
    +input-field({ type, placeholder, value })(
      class= flatpickr ? 'flatpickr-input js-flatpickr' : null,
      data-toggle= flatpickr ? "flatpickr" : null
      data-mode= flatpickr ? "range" : null 
      data-disable-mobile= flatpickr ? "true" : null 
      data-date-format= flatpickr ? "Y-m-d" : null
      readonly
    )

//- Input Field disabled
mixin group-input-field-disabled({ label, id, type, placeholder, value, disabled })
  .form-group.form-customize(
    class= "form-control__disabled"
  )&attributes(attributes)
    label(
      for= id ? id : null
    )= label

    +input-field({ type, placeholder, value })(
      disabled= disabled ? 'disabled' : null
    )
